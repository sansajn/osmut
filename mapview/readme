závislosti:

	libgtkmm-3.0-dev
	libmapnik-dev
	libosmium2-dev
	gcc-7.0 (c++17 support)
	libboost-all-dev (1.62)

* počítanie dlaždíc na gpu
* fake GPS modul (simulácia PGS modulu)
* kešuj dlaždice
* umozni zobrazit dáta zo satelitu
* umožni renderovať s OSM dát pre jednotlivé štáty/oblasťi
* neblokujúci render dlaždíc
* renderuj aj cestnu sieť (dialnice)
* renderuj s databáze
* renderuj s protobuf fajlu
* renderuj s osm fajlu
/* zobraz všetky ATM v prahe
|* umožni zobraziť body na mape
|* generuj niekoľko dlaždíc naraz (multithread)
|* renderuj nie len boundaries, ale aj mestá a zastavané oblasti
|* kešuj už vygenerované dlaždice
|* generuj dlaždice aj pomocou mapniku
|* sprav zo samplu widget
|* umožni zobraziť dlaždice uložené na disku 


* (2017.12.28) zobraz všetky ATM v prahe

zobrazovať budem s osm fajlu a k jeho parsovaniu použijem osmium


* umožni zobraziť body na mape

zoznam bodou uložený v lua tabuľke, takto

{  -- lat, lon
	{123.45, 12.34},
	{}
}

dáta môžem umiestniť do quad-tree (reprezentujúceho svet) a odtial získať zoznam
vyditeľných bodou.

potrebujem tiež vrstvy

(?) Ako na transformáciu geo pozície (wgs84) na súradnice okna ?

najjednoduchšia metóda je lineárna fransformacia

napr. bod p=(50.088182, 14.420210) na súradnice mapy transformujem nasledovne: mapa nech reprezentuje povrch zeme od -180 až 180 stupňou šírky a -90 až 90 stupňou výšky, potom p leží v relatívnej vzdialenosti

	r = ((p_lat + 90)/180, (p_lon + 180)/360) 
	r = (p_lat/180 + 1/2, p_lon/360 + 1/2)

Nech je mapa dlhá M a široká N bodou, potom bod p bude mať na mape takéto
súradnice

	s = ((p_lat/180+1/2)*M, (p_lon/360+1/2)*N)

tzn. napr. nech M = N = 2^6*256 = 1538, potom

	s = (1196.9756884, 830.6063416)



(?) akú mapovú projekciu používam ?

mapová projekcia je funkcia, ktorá transformuje bod na povrchu guľe, ale iného
sphereoidu do roviny

	f(lat, lon) -> x,y

ak mám dáta s GPS (lat,lon), tak potom tie používajú WGS84 (nie je to projekcia, ale model zeme)

 WGS84, that's the system that the GPS satellite system uses internally

	http://spatialreference.org/ref/epsg/wgs-84/


použi toto 

	map.zoom_to_box(mapnik.Box2d(-180, -90, +180, +90))  

aby som si bol istý, že mapa sa renderuje od -180, -90 po 180, 90

pg. 699 (Erik Westra)

mapová projekcia s knihy je

	 srs="+proj=latlong +datum=WGS84"

mapnik defaultne používa

	static const std::string MAPNIK_LONGLAT_PROJ = 
		"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs";

tzn. žiadnu projekciu (alebo aj priamu)




(?) ako zobrazím GPS dáta na OSM mape ?

gps dáta sú unprojected lat,lon súradnice na wgs84 spheroid tzn. potrebujem použiť merkátor projekciu


WGS84 (EPSG 4326)
Mercator (EPSG 3857)

	http://openstreetmapdata.com/info/projections

Mercator (EPSG 3857)

Most tiled web maps (such as the standard OSM maps and Google Maps) use this Mercator projection.

The map area of such maps is a square with x and y coordiates both between -20,037,508.34 and 20,037,508.34 meters. As a result data north of about 85.1° and south of about -85.1° latitude can not be shown and has been cut off.

The correct EPSG code for this data is 3857 and this is what the data files show. Before this code was allocated other codes such as 900913 were used. If your software does not understand the 3857 code you might need to upgrade. See this page for all the details.

This is the right choice for you if you are creating tiled web maps.

https://alastaira.wordpress.com/2011/01/23/the-google-maps-bing-maps-spherical-mercator-projection/




* generuj niekoľko dlaždíc naraz (multithread)

zdá sa že mapnik::Map nie je thread safe (stav k 2015)

	1) Use and re-use available mapnik.Map objects in rendering threads
	2) No one mapnik.Map object will be in use in more than one thread at any time

https://github.com/mapnik/mapnik-support/issues/57

treba pre každý thread vytvoriť/použiť vlastný mapnik::map objekt. Ako
management táskou použijem async a future s std.


* renderuj nie len boundaries, ale aj mestá a zastavané oblasti

na zoznam miest môžem použiť napr. 'places.shp' a na zastavané oblasti môžem
napr. použiť 'builtup_area.shp' s archívu 'world_boundaries-spherical.tgz'

	http://planet.openstreetmap.org/historical-shapefiles/world_boundaries-spherical.tgz

Je nutné, aby všetky shp súbory maly rovnakú projekciu (treba skonvertovať
napr. v q-gise). Na konverziu takto, otvor shapefile, ostatene do otvoreneho
pridaj akú vrstvy Layer > Add Layer > Add Vector Layer. Potom pravým tlačítkom
na každu vrstvu a vyber Save As a v okne zvol CRS (Coordinaate Transformation
System).

(?) čo obsahuje places shapefile ?

jeden layer v ktorom je 251 feature-ov, každý feature vypadá takto

	feature_N: geometry=point, fields=3
		 geometry: POINT (74.5662078857422 46.329345703125)
		 id(int64):250
		 place_name(string):Lake Balkhash
		 end_id(int64):250

(?) čo obsahuje builtup_area shapefile ?

jednu vrstvu (layer) v ktorej je 36432 feature-ov, každý feature vypadá takto

  feature_0: geometry=polygon, fields=5
    geometry: POLYGON ((-19937199.1812703 9926098.36547747,-19936392.3459717 9925014.77013953,-19936394.0445724 9925012.65803309,-19936918.9121666 9924091.84083544,-19940616.765735 9923557.56941947,-19940575.9993199 9925988.5196496,-19940173.4309709 9926244.12512484,-19939371.6914742 9926049.77960846,-19938935.1511127 9925806.85536404,-19937199.1812703 9926098.36547747))
    id(int64):1
    f_code(string):AL020
    nam(string):EGVEKINOT
    tile_id(int32):1
    fac_id(int64):2


!!! nejede to, lebo dáta majú inu projekciu (world je uplne maly a nejde ho vydieť)


* generuj dlaždice pomocou mapniku

Chcem zachovať súčastný stav, tzn. mapview vie zobrazovať aj dlaždice uložené v
adresáry a zároveň chcem aby bolo možné zobrazovať aj dlaždice generované
pomocou mapniku.

