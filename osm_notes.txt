1) Ako presné sú transformácie, ktoré používam ?
2) Ako transformuje monav ?
3) Aké štruktúry používa monav na lookup ?

Omnoho efektívnejšie (z hladiska spotreby pamäte) je spracovávať najprv way
elementy, pretože ich bude veľké množstvo vyfiltrovaných. V dobe čítania
vrcholou už viem, ktoré z nich potrebujem a ktoré nie. Problém je v tom, že
potrebujem mapu použitých vrcholou ktorá zaberie niekoľko krát viac miesta ako
samotné vrcholy a tiež hladanie (v porovnaním s priamym prístupom) v mape je
pomalé.

1) Ako presné sú transformácie, ktoré používam ?

Pri použití merkátoru a inverzného merkátoru na výsledok sa objavý chyba okolo
štvrtého desatiného miesta, čo znamená aj niekoľko metrou na povrchu zeme.
Niektoré body cesty splynú do jedného (vedajú sa jednoznačne identifikovať).
[Ukážka:

	# pôvodné body
	(48.1123354, 17.1241929),
	(48.1124106, 17.1219399),
	(48.1124192, 17.1213834),

	# po transformácii zoom-level 12
	48.1124744, 17.1239090 -> (-0.000139, 0.000284) -> (-0.000289%, 0.001658%)
	48.1124744, 17.1218491 -> (-0.000064, 0.000091) -> (-0.000133%, 0.000531%)
	48.1124744, 17.1211624 -> (-0.000055, 0.000221) -> (-0.000115%, 0.001291%)

--- koniec ukážky].

Plain c implementácia (bez zoomu)

	48.1123354, 17.1241929 -> (0.000000, 0.000000) -> (3.20622e-11%, 0%)
	48.1124106, 17.1219399 -> (0.000000, 0.000000) -> (3.20622e-11%, 0%)
	48.1124192, 17.1213834 -> (0.000000, 0.000000) -> (3.20622e-11%, 0%)

2) Ako transformuje monav ?

Celá matematika je implementovaná v 'coordinates.h'. 

MainWindow, 
PaintWidget
MainWindow::mauseClicked() // odkial sa zobrala pozícia
	MainWindow::connectSlots()
		signál m_ui->paintArea::mouseClicked
			PaintWidget::mouseReleaseEvent()
				IRenderer::PointToCoordinate()

implementácia rendereru

mapnikrendererclient::RendererBase

Interakciu s užívateľom realizuje PaintWidget. Pri vytvorení PaintWidget-u sa
PaintRequest::center inicializuje na konkrétnu hodnotu. Tiež vo volaní
setCenter() sa jeho hodnota môže meniť. Pri moveEvente sa mení center pozícia na
základe relatívnych posuvou.

GPS lookup je reprezentovaný rozhraním IGPSLookup, konkrétna implementácia je
napr. gpsgridclient::GPSGridClient.

V monave sa nerobý inverzná mercator transformácia, GPS pozícia sa s
vrcholom/hranou spáruje hladaním v grid-tabulke na základe UnsignedCoordinate.


3) Aké štruktúry používa monav na lookup ?


{Vykreslovanie}

O vykreslenie grafu sa stará program 'pylayers/osmgraph_layer.py'.

LOD (levels of detail) [Tabuľka:

	type : zoom (color)
	-------------------
	highway : 5 (modré)
	trunk : 5 (zelené)
	primary : 7 (červené)
	secondary : 9 (oranžové)
	tertiary : 10 (šedé, od 13 žlté)
	living-street, pedestrian : 12
	residential : 12 (šedé, na 13 biela)
	footway : 13 (červená bodkovaná)
	všetko : 14

--- koniec tabuľky].

* veľké množstvo dát
* LOD (v závislosti od zoomu)
* pri zoome treba prerátať pozície objektou


